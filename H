using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        // Définir l'échéancier initial
        var echeancier = new List<(DateTime debut, DateTime fin)>
        {
            (new DateTime(2024, 12, 1), new DateTime(2024, 12, 31)),
            (new DateTime(2025, 12, 1), new DateTime(2025, 3, 31)),
            (new DateTime(2025, 4, 1), new DateTime(2025, 12, 31))
        };

        // Date de livraison
        DateTime dateLivraison = new DateTime(2025, 2, 15); // Exemple de date de livraison

        // Calculer le nouveau tableau d'échéancier
        var nouveauEcheancier = CalculerNouveauEcheancier(echeancier, dateLivraison);

        // Afficher le résultat
        foreach (var echeance in nouveauEcheancier)
        {
            Console.WriteLine($"Début: {echeance.debut.ToShortDateString()} - Fin: {echeance.fin.ToShortDateString()}");
        }
    }

    static List<(DateTime debut, DateTime fin)> CalculerNouveauEcheancier(List<(DateTime debut, DateTime fin)> echeancier, DateTime dateLivraison)
    {
        var nouveauEcheancier = new List<(DateTime debut, DateTime fin)>();

        foreach (var (debut, fin) in echeancier)
        {
            // Si la date de livraison est dans la période de l'échéancier
            if (dateLivraison >= debut && dateLivraison <= fin)
            {
                // Ajuster les dates d'échéance en fonction de la date de livraison
                DateTime debutModifie = debut;
                DateTime finModifie = fin;

                // Modifier le début de la période
                if (debut.Day == 1)
                {
                    // Si le jour est le 1er du mois, on conserve ce jour
                    debutModifie = dateLivraison;
                }
                else
                {
                    // Sinon on fixe à la fin du mois précédent
                    debutModifie = debut.AddMonths(-1).AddDays(DateTime.DaysInMonth(debut.AddMonths(-1).Year, debut.AddMonths(-1).Month) - debut.Day + 1);
                }

                // Ajouter la nouvelle période ajustée à l'échéancier
                nouveauEcheancier.Add((debutModifie, finModifie));
            }
            else
            {
                // Si la date de livraison n'affecte pas cette période, on garde la période originale
                nouveauEcheancier.Add((debut, fin));
            }
        }

        return nouveauEcheancier;
    }
}
